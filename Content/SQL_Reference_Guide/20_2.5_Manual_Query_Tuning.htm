<?xml version="1.0" encoding="utf-8"?>
<html lang="en" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="mp-topic" style="mc-master-page: url('..\Resources\MasterPages\SQLReference.flmsp');">
    <head>
        <link href="../Resources/Table Styles/DefaultTable.css" rel="stylesheet" MadCap:stylesheetType="table" />
    </head>
    <body class="article toc2 toc-left">
        <div id="content">
            <div class="sect1">
                <div class="sectionbody">
                    <div class="sect2">
                        <h3 id="_manual_query_tuning">Manual Query Tuning</h3>
                        <div class="sect3">
                            <h4 id="high_selectivity"><a name="WHERE"></a>WHERE with HIGH_SELECTIVITY</h4>
                            <div class="paragraph">
                                <p><strong>WHERE HIGH_SELECTIVITY</strong> is used to filter out rows, with a hint optimization.
This is best used when the column being filtered out is <strong>not sorted</strong>, and the amount of <strong>rows returned is expected to be small</strong> (good rule of thumb would be less than 40%).</p>
                            </div>
                            <div class="paragraph">
                                <p>This hint tells the compiler that this WHERE condition is going to filter out more than 60% (for example) of the table rows. It does not affect the query results, but when used correctly can improve query performance.</p>
                            </div>
                            <div class="admonitionblock tip">
                                <table style="mc-table-style: url('../Resources/Table Styles/DefaultTable.css');" class="TableStyle-Default_Table" cellspacing="0">
                                    <tr class="TableStyle-Default_Table-Body-Body1">
                                        <td class="TableStyle-Default_Table-BodyD-Column1-Body1">
                                            <div class="ulist">
                                                <ul>
                                                    <li>
                                                        <p>This feature is less effective when the condition is on a sorted column, since it<br />will overlap with other optimizations, thereby making it redundant.</p>
                                                    </li>
                                                    <li>
                                                        <p>If there’s no reason to believe that the WHERE clause is going to filter a majority<br />of the records, this optimization can be omitted</p>
                                                    </li>
                                                </ul>
                                            </div>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                            <div class="paragraph">
                                <p class="example">Examples:</p>
                            </div>
                            <div class="code">
                                <div class="content"><pre class="pygments highlight" xml:space="preserve"><code data-lang="sqream db"><span class="tok-c1">-- We know LOG_ID=5 is a small amount of values, so we will</span>  
<span class="tok-c1">-- instruct the compiler about it:</span>  
<span class="tok-k">select</span>  <span class="tok-o">*</span>  <span class="tok-k">from</span>  <span class="tok-n">logger</span>  <span class="tok-k">where</span>  <span class="tok-n">high_selectivity</span><span class="tok-p">(</span><span class="tok-n">log_id</span>  <span class="tok-o">=</span>  <span class="tok-mf">5</span><span class="tok-p">);</span>  
<span class="tok-c1">-- We can also add other values:</span>  
<span class="tok-k">select</span>  <span class="tok-o">*</span>  <span class="tok-k">from</span>  <span class="tok-n">logger</span>  <span class="tok-k">where</span>  <span class="tok-n">high_selectivity</span><span class="tok-p">(</span><span class="tok-n">log_id</span>  <span class="tok-o">=</span>  <span class="tok-mf">5</span><span class="tok-p">)</span>  <span class="tok-k">and</span>  <span class="tok-n">high_selectivity</span><span class="tok-p">(</span><span class="tok-n">IP</span><span class="tok-o">=</span><span class="tok-s1">'192.168.0.192'</span><span class="tok-p">);</span>  
<span class="tok-c1">-- Or (alternate syntax):</span>  
<span class="tok-k">select</span>  <span class="tok-o">*</span>  <span class="tok-k">from</span>  <span class="tok-n">logger</span>  <span class="tok-k">where</span>  <span class="tok-n">high_selectivity</span><span class="tok-p">(</span><span class="tok-n">log_id</span>  <span class="tok-o">=</span>  <span class="tok-mf">5</span>  <span class="tok-k">and</span>  <span class="tok-n">IP</span><span class="tok-o">=</span><span class="tok-s1">'192.168.0.192'</span><span class="tok-p">);</span></code></pre>
                                </div>
                            </div>
                            <div class="admonitionblock note">
                                <table style="mc-table-style: url('../Resources/Table Styles/DefaultTable.css');" class="TableStyle-Default_Table" cellspacing="0">
                                    <tr class="TableStyle-Default_Table-Body-Body1">
                                        <td class="TableStyle-Default_Table-BodyD-Column1-Body1">
From V2.5 the hint is called HIGH_SELECTIVITY. In lower versions this hint was called LOW_SELECTIVITY.
</td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </body>
</html>