<?xml version="1.0" encoding="utf-8"?>
<html lang="en" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="mp-topic" style="mc-master-page: url('..\..\Resources\MasterPages\Drivers.flmsp');">
    <head>
    </head>
    <body class="article toc2 toc-left">
        <h3 id="_example_of_classic_set_data_loop_using_network_streaming_also_called_network_insert">Example of classic Set data loop, using network streaming (also called Network Insert)</h3>
        <div class="code">
            <div class="title">Example</div>
            <div class="content"><pre class="pygments highlight" xml:space="preserve"><code data-lang="python"><span class="tok-c1"># here we create the according table by executing a</span>  
<span class="tok-c1"># "create or replace table table_name (int_column int, varchar_column varchar(10))" statement</span>  

<span class="tok-n">row1</span>  <span class="tok-o">=</span>  <span class="tok-p">[</span><span class="tok-mi">1</span><span class="tok-p">,</span><span class="tok-mi">2</span><span class="tok-p">,</span><span class="tok-mi">3</span><span class="tok-p">]</span>  
<span class="tok-n">row2</span>  <span class="tok-o">=</span>  <span class="tok-p">[</span><span class="tok-s2">"s1"</span><span class="tok-p">,</span><span class="tok-s2">"s2"</span><span class="tok-p">,</span><span class="tok-s2">"s3"</span><span class="tok-p">]</span>  
<span class="tok-n">length_of_arrays</span>  <span class="tok-o">=</span>  <span class="tok-mi">3</span>  

<span class="tok-c1"># each interrogation symbol represent a column to which the network insertion can push</span>  
<span class="tok-n">statement</span>  <span class="tok-o">=</span>  <span class="tok-s1">'insert into table_name(int_column, varchar_column) values(?, ?)'</span>  
<span class="tok-n">con</span><span class="tok-o">.</span><span class="tok-n">prepare</span><span class="tok-p">(</span><span class="tok-n">statement</span><span class="tok-p">)</span>  
<span class="tok-n">con</span><span class="tok-o">.</span><span class="tok-n">execute</span><span class="tok-p">()</span>  

<span class="tok-k">for</span>  <span class="tok-n">idx</span>  <span class="tok-ow">in</span>  <span class="tok-nb">range</span><span class="tok-p">(</span><span class="tok-n">length_of_arrays</span><span class="tok-p">):</span>  
    <span class="tok-n">con</span><span class="tok-o">.</span><span class="tok-n">set_int</span><span class="tok-p">(</span><span class="tok-mi">1</span><span class="tok-p">,</span>  <span class="tok-n">row1</span><span class="tok-p">[</span><span class="tok-n">idx</span><span class="tok-p">])</span>        <span class="tok-c1"># we put a value at column 1 of the table</span>  
    <span class="tok-n">con</span><span class="tok-o">.</span><span class="tok-n">set_varchar</span><span class="tok-p">(</span><span class="tok-mi">2</span><span class="tok-p">,</span>  <span class="tok-n">row2</span><span class="tok-p">[</span><span class="tok-n">idx</span><span class="tok-p">])</span>    <span class="tok-c1"># we put a value at column 2 of the table</span>  
    <span class="tok-n">con</span><span class="tok-o">.</span><span class="tok-n">next_row</span><span class="tok-p">()</span>                   <span class="tok-c1"># move to setting a new row</span>  


<span class="tok-n">con</span><span class="tok-o">.</span><span class="tok-n">close</span><span class="tok-p">()</span>  
<span class="tok-n">con</span><span class="tok-o">.</span><span class="tok-n">close_connection</span><span class="tok-p">()</span></code></pre>
            </div>
        </div>
    </body>
</html>