<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" class="mp-topic">
    <head>
    </head>
    <body>
        <h2>Configuring the network</h2>
        <p>After all network interfaces are up and configured, do the following:</p>
        <ul>
            <li><a href="#Configur">Configuring the firewall</a>
            </li>
            <li><a href="#Setting">Setting the hostname</a>
            </li>
        </ul>
        <h3><a name="Configur"></a>Configuring the firewall</h3>
        <p>Firewalls provide a basic level of security for your server. These applications are responsible for denying traffic to every port on your server except the ports/services you have approved. CentOS ships with a firewall called <span class="strong">firewalld</span>. A tool called <span class="strong">firewall-cmd</span> can also be used to configure your firewall policies.</p>
        <p>If SQream DB runs on an internet-accessible server, we recommend that the public SQream database ports not be exposed to the internet. As with any application, the best strategy is to lock down everything that you do not have a good reason to keep open. The <span class="strong">firewalld</span> service has the ability to make modifications without dropping current connections, so you can turn it on before creating exceptions.</p>
        <p class="toDo">Run this command to start the firewalld service.</p>
        <p class="code"># sudo systemctl start firewalld</p>
        <p>Now add a firewall "exception" to each SQream database port.</p>
        <ul>
            <li>If the server is to run the Metadata Server and Load Balancer, open ports 3105 and 3108.</li>
            <li>If the server is to run SQream database daemons, open the relevant ports for these daemons.</li>
        </ul>
        <p>For example, for a server hosting all services and SQream database ports 5000-5003 run the following commands:</p>
        <p class="code"># sudo firewall-cmd --zone=public --permanent --add-port=3105/tcp</p>
        <p class="code"># sudo firewall-cmd --zone=public --permanent --add-port=3108/tcp</p>
        <p class="code"># sudo firewall-cmd --zone=public --permanent --add-port=5000-5003/tcp</p>
        <p class="toDo">When you are finished, run the following command to see the list of the exceptions that will be implemented:</p>
        <p class="code"># sudo firewall-cmd --permanent --list-all</p>
        <p class="toDo">When you are ready to implement the changes, run this command to reload the firewall:</p>
        <p class="code"># sudo firewall-cmd --reload</p>
        <p class="toDo">If, after testing, everything works as expected, run this command to make sure the firewall will be started at boot:</p>
        <p class="code"># sudo systemctl enable firewalld</p>
        <div class="tip">
            <p>You will have to explicitly open the firewall (with services or ports) for any additional services that you may configure in the future</p>
        </div>
        <h3><a name="Setting"></a>Setting the hostname</h3>
        <p>Add the server ip address and server name to the /etc/hosts file in order to avoid resolving timeouts.</p>
        <ol>
            <li>Find out server IP:</li>
            <p class="code">ifconfig</p>
            <li>Find out server hostname</li>
            <p class="code">sudo hostname</p>
            <li>Edit the /etc/hosts file</li>
            <p class="code">sudo vim /etc/hosts</p>
            <p>The original file looks like this:</p>
            <div class="code">
                <p>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</p>
                <p>::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</p>
            </div>
            <p>Add the following line to the file (substitute the actual server ip address and hostname):</p>
            <p class="code">192.168.0.55     hostname</p>
        </ol>
    </body>
</html>